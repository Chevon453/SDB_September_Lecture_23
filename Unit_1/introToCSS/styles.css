/* This is a comment within CSS */
/* 'ctrl +/' will also make a comment */
/* on mac, this 'cmd + /'*/

/*
These Comments
Can Span
Multiple Lines
*/

/*
  List of CSS Selectors
- Element Selector: is going to select all instances of a given tag from our HTML page _ body _ p
 */    

/* I want to change the color of my p tags*/
/* I have to start by telling my CSS file what I want to Change */
p h1 {/* Select All <p> Tags */
    /* By using a comma I can have this style rule effect
    multiple different tags at the same time*/
color: orangered; */change the text color to "Orangered" */
background-color:yellowgreen; */
}

/* body selector - what we write before the{} is going to be our "selector". A "selector" is the term for the element or elements on my HTML page which are being edited by this style rule*/
body{
background-color: lightgray;  
/*
In CSS we have 3 major ways to refer to a color:display:
  - color keywords:display:
    - green, lightgray, orangered, etc...
  -RGB value:display:  
    -rgb(0-255, 0-255, 0-255)
    -Each of these numbers represents one of our "rgb" values represents how strong either the RedGreen, or Blue is in our color
    - Hex Color:display:
      - #002255
      -Each pair of values represents one of our "rgb" values, so a hex
}
/* I must use a period . to select my class name. This will select all elements with this class name */
.header{
    text-align: center;
}

/* Compound Selector: it is more than a single selector in one rule */
h1,h2,h3,h4,h5,h6{
  /* this will now change all of my h tags at the same time */
  text-decoration: underline;
}

/* change a specific tag by selecting an ID */
/* To select an ID, I must use a number sign # a.k.a hashtag */
#unique {
    text-decoration: underline;
    background-color: pink;
    color: olivedrab;
    border-radius: 5px;
}
/* We are only ever going to get back ONE item with a given ID. Unlike a tag name or class, we cannot use the same ID multiple times, the styling will still apply. This does not mean we should use it in place of a class. Our browser and javascript is only going to pay attention to the first item with a given ID when we start making our pages functional */


/* I can focus my selector to only work on .btn classes WITHIN a specific container */
nav .btn {
  text-shadow: 2px 2px 2px rgb(159, 16, 128);
}


/* This selector will only effect the direct children of our nav (only elements which are immediately after the <nav> tag with no <div> or <span> in between */
nav> .btn{
/* This is going to change the text color using the class */
background-color: blue;
}

a {
  /* This is going to change my text color using the tag (or element) name */
  color:blueviolet !important 
}


/*
 ! CSS Hierarchy

  This is going to allow CSS to use distinct levels of "priority" to style our elements. The order of priority from weakest to strongest is:

  External Stylesheet: 
  - Element
  - Class
  - ID
  -!important

   Internal Style: 
    - Element
    - Class
    - ID

    -Inline Styling
    -!important

  "External Stylesheet" is a .css file which is not the. html file we have our webpage in

  "Internal Stylesheet" is CSS written within the .html file

  "Inline Styling" is when I add a"style" property to an element in my html file
  */

/* styling an unvisited link*/
a:link {
  color: brown;
}

/* Styling a link I have visited*/
a:visited{
  color:orangered;
text-decoration: overline;
}

/* Styling a link my mouse is hovering over */
a:hover{
  color:green
}

/* Styling a link while it is being clicked */
a:active{
  color: aquamarine;
}